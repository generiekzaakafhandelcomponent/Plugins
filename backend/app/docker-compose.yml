services:

  example-core-db:
    container_name: example-core-db
    image: postgres:15
    ports:
      - "54340:5432"
    environment:
      POSTGRES_USER: example
      POSTGRES_PASSWORD: password
      POSTGRES_DB: example-core-db

  example-core-keycloak:
    container_name: example-core-keycloak
    depends_on:
      - example-core-keycloak-db
    image: quay.io/keycloak/keycloak:17.0.1-legacy
    volumes:
      - ./docker/imports/keycloak:/opt/jboss/keycloak/imports
    ports:
      - "8081:8080"
    environment:
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: admin
      DB_VENDOR: postgres
      DB_ADDR: example-core-keycloak-db
      DB_USER: keycloak
      DB_PASSWORD: keycloak
    command:
      - "-Dkeycloak.migration.action=import"
      - "-Dkeycloak.migration.provider=singleFile"
      - "-Dkeycloak.migration.file=/opt/jboss/keycloak/imports/realm.json"
      - "-Dkeycloak.migration.strategy=IGNORE_EXISTING"

  example-core-keycloak-db:
    image: postgres:15
    container_name: example-core-keycloak-db
    ports:
      - "54329:5432"
    environment:
      - POSTGRES_USER=${DB_USER:-keycloak}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-keycloak}

  #zgw
  example-redis:
    image: redis:6.2.6
    container_name: example-redis

  example-openzaak:
    image: openzaak/open-zaak:1.12.4
    container_name: example-openzaak
    platform: linux/amd64
    environment:
      - DB_HOST=example-openzaak-database
      - DB_POST=5433
      - SECRET_KEY=veryRestrictedSecretKey
      - DB_USER=openzaak
      - DB_PASSWORD=openzaak
      - DB_NAME=openzaak
      - CACHE_DEFAULT=example-redis:6379/0
      - CACHE_AXES=example-redis:6379/0
      - DEBUG=true
      - ALLOWED_HOSTS=localhost,host.docker.internal,172.17.0.1,example-openzaak
      - OPENZAAK_SUPERUSER_USERNAME=admin
      - OPENZAAK_SUPERUSER_EMAIL=admin@admin.org
      - CELERY_BROKER_URL=redis://example-redis:6379/0
      - CELERY_RESULT_BACKEND=redis://example-redis:6379/0
      - DJANGO_SUPERUSER_PASSWORD=admin
      - SENDFILE_BACKEND=django_sendfile.backends.simple
    ports:
      - "8001:8000"
    depends_on:
      -   example-openzaak-database
      -   example-redis
    volumes:
      - example-openzaak-private-media:/app/private-media # persist data even if container shuts down

  example-openzaak-database:
    image: mdillon/postgis:11
    container_name: example-openzaak-database
    platform: linux/amd64
    environment:
      - POSTGRES_USER=openzaak
      - POSTGRES_PASSWORD=openzaak
      - POSTGRES_DB=openzaak
    volumes:
      - ./imports/open-zaak:/docker-entrypoint-initdb.d

  example-objecten-api:
    image: maykinmedia/objects-api:2.1.1
    container_name: example-objecten-api
    platform: linux/amd64
    ports:
      - "8010:8000"
    environment: &objects-env
      - CORS_ALLOW_ALL_ORIGINS=true
      - SECRET_KEY=${SECRET_KEY:-1(@f(-6s_u(5fd&1sg^uvu2s(c-9sapw)1era8q&)g)h@cwxxg}
      - DJANGO_SETTINGS_MODULE=objects.conf.docker
      - DB_HOST=example-objecten-api-database
      - DEBUG=true
      - TWO_FACTOR_FORCE_OTP_ADMIN=False # this is not available yet in this version
      - TWO_FACTOR_PATCH_ADMIN=False
    depends_on:
      - example-objecten-api-database

  example-objecten-api-database:
    image: postgis/postgis:13-3.1
    container_name: example-objecten-api-database
    platform: linux/amd64
    environment:
      - POSTGRES_USER=objects
      - POSTGRES_PASSWORD=objects
      - POSTGRES_DB=objects

  example-objecten-api-import:
    image: maykinmedia/objects-api:2.1.1
    container_name: example-objects-api-import
    platform: linux/amd64
    environment: *objects-env
    # in the current version of django it is not possible to create a new user with password without user interaction by using the createsuperuser command
    command: sh init/init.sh
    volumes:
      - ./imports/objects-api/fixtures:/app/src/objects/fixtures
      - ./imports/objects-api/init:/app/init
    depends_on:
      - example-objecten-api

  example-objecttypen-api:
    image: maykinmedia/objecttypes-api:2.1.0
    container_name: example-objecttypen-api
    platform: linux/amd64
    ports:
      - "8011:8000"
    environment: &objecttypes-env
      - CORS_ALLOW_ALL_ORIGINS=true
      - SECRET_KEY=${SECRET_KEY:-fgv=c0hz&tl*8*3m3893@m+1pstrvidc9e^5@fpspmg%cy$$15d}
      - DJANGO_SETTINGS_MODULE=objecttypes.conf.docker
      - DB_HOST=example-objecttypen-api-database
      - DEBUG=true
      - TWO_FACTOR_FORCE_OTP_ADMIN=False # this is not available yet in this version
      - TWO_FACTOR_PATCH_ADMIN=False
    depends_on:
      - example-objecttypen-api-database

  example-objecttypen-api-database:
    image: postgres:14.1
    container_name: example-objecttypen-api-database
    environment:
      - POSTGRES_USER=objecttypes
      - POSTGRES_PASSWORD=objecttypes
      - POSTGRES_DB=objecttypes


  example-objecttypen-api-import:
    image: maykinmedia/objecttypes-api:2.1.0
    container_name: example-objecttypen-api-import
    platform: linux/amd64
    environment: *objecttypes-env
    command: sh init/init.sh
    volumes:
      - ./imports/objecttypes-api/fixtures:/app/src/objecttypes/fixtures
      - ./imports/objecttypes-api/init:/app/init
    depends_on:
      - example-objecttypen-api

  example-open-notificaties:
    image: openzaak/open-notificaties:1.7.1
    container_name: example-open-notificaties
    platform: linux/amd64
    ports:
      - "8002:8000"
    environment: &notificaties-env
      - DJANGO_SETTINGS_MODULE=nrc.conf.docker
      - SECRET_KEY=${SECRET_KEY:-4wHY2Cp5`4(q%)]cuWxPQJRp5kN?g+`.Xah>%6Fsq6+)R>p_}
      - ALLOWED_HOSTS=*
      - CACHE_DEFAULT=example-redis-open-notificaties:6379/0
      - CACHE_AXES=example-redis-open-notificaties:6379/1
      - DB_PORT=5432
      - DB_HOST=example-database-open-notificaties
      - DB_NAME=notifications
      - DB_USER=notifications
      - DB_PASSWORD=notifications
      - DISABLE_2FA=true
      - DEBUG=true
      - RABBITMQ_HOST=example-open-notificaties-rabbitmq
      - PUBLISH_BROKER_URL=redis://example-redis-open-notificaties:6379/0
      - CELERY_BROKER_URL=redis://example-redis-open-notificaties:6379/0
      - CELERY_RESULT_BACKEND=redis://example-redis-open-notificaties:6379/0
      - CELERY_LOGLEVEL=DEBUG
      - CELERY_WORKER_CONCURRENCY=${CELERY_WORKER_CONCURRENCY:-4}

  example-open-notificaties-celery:
    image: openzaak/open-notificaties:1.7.1
    container_name: example-open-notificaties-celery
    platform: linux/amd64
    environment: *notificaties-env
    command: /celery_worker.sh

  example-database-open-notificaties:
    image: postgres:13.5  # open-notificaties doesn't work with postgres 14.
    container_name: example-database-open-notificaties
    ports:
      - "54319:5432"
    environment:
      - POSTGRES_USER=${DB_USER:-notifications}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-notifications}
      - POSTGRES_DB=notifications
    volumes:
      - ./imports/open-notificaties:/docker-entrypoint-initdb.d

  example-redis-open-notificaties:
    image: redis:6.2.6
    container_name: example-redis-open-notificaties

volumes:
  example-openzaak-private-media: